//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;
use serde::{Serialize, Deserialize};

use crate::utils::TweetReferenceData;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "tweet_references")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub source_tweet_id: i64,
    pub reference_type: String,
    pub referenced_tweet_id: i64,
}


#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tweets::Entity",
        from = "Column::ReferencedTweetId",
        to = "super::tweets::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Tweets2,
    #[sea_orm(
        belongs_to = "super::tweets::Entity",
        from = "Column::SourceTweetId",
        to = "super::tweets::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Tweets1,
}

impl ActiveModelBehavior for ActiveModel {}
